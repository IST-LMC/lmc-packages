.\" Man page generated from reStructeredText.
.
.TH VMOD_IPCAST 3 "2013-10-05" "1.0" ""
.SH NAME
vmod_ipcast \- Varnish ipcast Module
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.SH SYNOPSIS
.sp
import ipcast;
.SH DESCRIPTION
.sp
This is a Varnish 3.0 VMOD for inserting a VCL string into
the client.ip internal variable.
.SH FUNCTIONS
.SS clientip
.INDENT 0.0
.TP
.B Prototype
.sp
.nf
.ft C
clientip(STRING S)
.ft P
.fi
.TP
.B Return value
INT
.TP
.B Description
Parse the IPv4/IPv6 address in S, and set that to client.ip. If
successfull a value of 0 is returned.
.sp
If parsing the IP address with getaddrinfo() fails, the error
message will be logged to varnishlog and client.ip is left untouched.
A non\-zero return code will be set.
.sp
.nf
.ft C
ipcast.clientip("192.168.0.10");
ipcast.clientip("2001:db8::1");
.ft P
.fi
.UNINDENT
.SH INSTALLATION
.sp
The source tree is based on autotools to configure the building, and
does also have the necessary bits in place to do functional unit tests
using the varnishtest tool.
.sp
Usage:
.sp
.nf
.ft C
# only if you are building from a git clone.
\&./autogen.sh
\&./configure VARNISHSRC=DIR [VMODDIR=DIR]
.ft P
.fi
.sp
\fIVARNISHSRC\fP is the directory of the Varnish source tree for which to
compile your vmod. Both the \fIVARNISHSRC\fP and \fIVARNISHSRC/include\fP
will be added to the include search paths for your module.
.sp
Optionally you can also set the vmod install directory by adding
\fIVMODDIR=DIR\fP (defaults to the pkg\-config discovered directory from your
Varnish installation).
.sp
Make targets:
.INDENT 0.0
.IP \(bu 2
make \- builds the vmod
.IP \(bu 2
make install \- installs your vmod in \fIVMODDIR\fP
.IP \(bu 2
make check \- runs the unit tests in \fBsrc/tests/*.vtc\fP
.UNINDENT
.sp
In your VCL you could then use this vmod along the following lines:
.sp
.nf
.ft C
import ipcast;
acl friendly_network {
    "192.0.2.0"/24;
}
sub vcl_recv {
    if (req.http.X\-Forwarded\-For !~ ",") {
        set req.http.xff = req.http.X\-Forwarded\-For;
    } else {
        set req.http.xff = regsub(req.http.X\-Forwarded\-For,
                "^[^,]+.?.?(.*)$", "\e1");
    }

    if (ipcast.clientip(req.http.xff) != 0) {
        error 400 "Bad request";
    }

    if (client.ip !~ friendly_network) {
            error 403 "Forbidden";
    }
}
.ft P
.fi
.SH HISTORY
.sp
This manual page is released as part of the libvmod\-ipcast package. It
is based on the example document in the libvmod\-example package.
.SH COPYRIGHT
.sp
This document is licensed under the same license as the
libvmod\-ipcast project. See LICENSE for details.
.INDENT 0.0
.IP \(bu 2
Copyright (c) 2011\-2013 Varnish Software
.UNINDENT
.SH AUTHOR
Lasse Karstensen
.\" Generated by docutils manpage writer.
.\" 
.
